# SPDX-FileCopyrightText: 2025 Deutsche Telekom AG
#
# SPDX-License-Identifier: Apache-2.0

{{- if eq .Values.global.database.location "local" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.deploymentName" . }}
  labels: {{ include "postgresql.labels" $ | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: {{ include "postgresql.selector" $ | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "postgresql.labels" $ | nindent 8 }}
    spec:
      {{- include "image_pull_secrets" $ | indent 6 }}
      securityContext: {{ include "platformSpecificValue" (list $ . ".Values.podSecurityContext") | default "fsGroup: 999" | nindent 8 }}
      containers:
      - name: postgresql
        resources: {{ .Values.resources | toYaml | nindent 10 }}
        env:
        {{- include "postgresql.env" $ | indent 8 }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        securityContext: {{ include "platformSpecificValue" (list $ . ".Values.containerSecurityContext") | default "{}" | nindent 10 }}
        ports:
        - containerPort: {{ .Values.global.database.port | default 5432 }}
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: {{ include "postgresql.deploymentName" . }}-tmp
        - mountPath: /var/run/postgresql
          name: {{ include "postgresql.deploymentName" . }}-run
        - mountPath: {{ .Values.persistence.mountDir | default "/var/lib/postgresql/data" }}
          name: {{ include "postgresql.deploymentName" . }}-data
        livenessProbe:
          tcpSocket:
            port: {{ .Values.global.database.port | default 5432 }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -U {{ .Values.global.database.username }}
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: {{ include "postgresql.deploymentName" . }}-run
        emptyDir: {}
      - name: {{ include "postgresql.deploymentName" . }}-tmp
        emptyDir: {}
      - name: {{ include "postgresql.deploymentName" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "postgresql.pvcName" . }}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
{{- end }}
